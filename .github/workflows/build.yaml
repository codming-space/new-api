name: Build Custom New API Docker Image
on:
  workflow_dispatch:
    inputs:
      tag:
        description: "The tag version you want to build from upstream"
        required: true

env:
  REGISTRY: docker.io
  IMAGE: codming/new-api

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Set up environment
        run: |
          echo "Building custom New API with tag: ${{ github.event.inputs.tag }}"

      - name: Checkout upstream New API repository
        uses: actions/checkout@v4
        with:
          repository: 'QuantumNous/new-api'
          ref: ${{ github.event.inputs.tag }}
          path: 'upstream'

      - name: Checkout override dockerfile
        uses: actions/checkout@v4
        with:
          path: 'overrides'

      - name: Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Build frontend with Bun
        run: |
          cp -r upstream/web overrides/web
          cd overrides/web
          bun install
          DISABLE_ESLINT_PLUGIN='true' VITE_REACT_APP_VERSION=${{ github.event.inputs.tag }} bun run build

      - name: Apply overrides
        run: |
          cp overrides/Dockerfile upstream/Dockerfile
          cp -r overrides/web/dist upstream/web/dist
          cd upstream
          git describe --tags > VERSION
          ls -al
          cat VERSION

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./upstream
          file: ./upstream/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE }}:${{ github.event.inputs.tag }}
            ${{ env.IMAGE }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/s390x
          cache-from: type=gha
          cache-to: type=gha,mode=max
